# Task list (atomic, ordered). Mark status with: TODO / IN-PROGRESS / DONE

Core MVP (minimum viable compiler)

1. T000 - Project skeleton and toolchain setup — DONE
- Deliverables: repository skeleton, Makefile, README, script to detect LLVM version.
- Acceptance: `make check` returns installed LLVM >= 12, prints tool versions.
- Tests: script unit test via `make check`.

2. T010 - Lexer (tokenizer) — TODO
- Deliverables: lexer implementation, token definitions, unit tests for tokenization of all language tokens (identifiers, keywords, literals, operators, punctuation).
- Acceptance: tests pass; example `lexer_tests/*.c` tokenized into expected token sequences.
- Tests: AST structural equality tests for each grammar rule.

3. T020 - Parser (recursive-descent) — TODO
- Deliverables: parser producing AST for expressions and statements (see language subset in architecture.mdc).
- Acceptance: AST matches golden files for sample inputs.
- Tests: AST structural equality tests for each grammar rule.

4. T030 - Semantic analyzer / type checker (no pointers) — TODO
- Deliverables: static type checker that enforces types, scoping, function signatures, and reports clear errors.
- Acceptance: semantic tests and negative tests (type errors) covering mismatches, missing identifiers, shadowing rules.

5. T040 - AST -> LLVM IR backend (codegen basics) — TODO
- Deliverables: translation from AST to LLVM IR for expressions, functions, control flow, and simple types.
- Acceptance: `compile test.c` produces an `.ll` file that `llc`/`clang` can turn into a runnable executable that produces correct output for integration tests.
- Tests: compile-run tests in `tests/integration/`.

6. T050 - Runtime and standard library (minimal) — TODO
- Deliverables: runtime support for `main`, stack/heap model (no raw pointers exposed to language), basic I/O: `print`/`println` and `%d`-style formatting or `printf` wrapper.
- Acceptance: sample programs that use IO and dynamic allocation run correctly.

7. T060 - Control flow: if/else, while, for, return — TODO
- Deliverables: AST+codegen+tests for conditionals and loops.
- Acceptance: integration tests for each structure.

8. T070 - Functions (parameters, returns, overloading? no) — TODO
- Deliverables: function definitions and calls, proper calling convention mapping to LLVM, local variables and argument passing.
- Acceptance: test functions with multiple parameters, recursion allowed.

9. T080 - Data types: int, bool, float, char, arrays (fixed-size) — TODO
- Deliverables: type system implementation and codegen for primitive types and compile-time fixed arrays.
- Acceptance: tests for arithmetic/boolean logic and array indexing bounds-checked at runtime.

10. T090 - Memory management (boxed heap for non-primitive) — TODO
- Deliverables: runtime allocation API for arrays/strings/objects; automatic memory reclamation via simple refcount (no pointer arithmetic) or explicit `free` in language.
- Acceptance: integration tests for allocation and deallocation; small leak-check tests.

11. T100 - String support and IO — TODO
- Deliverables: immutable string type, concatenation, printing, interop with runtime `printf`.
- Acceptance: string unit and integration tests.

12. T110 - Error handling and diagnostics — TODO
- Deliverables: consistent diagnostics for lexer/parser/semantic/codegen/runtime with source span reporting.
- Acceptance: negative tests that assert the content of error messages.

13. T120 - Full test-suite and cross-OS build verification — TODO
- Deliverables: test harness scripts to run the entire test suite and build on Linux, macOS, Windows (local or via VMs/containers).
- Acceptance: a documented checklist that an engineer runs locally before pushing.
- The LLM should not open parallel tasks; work serially.